
pluginManagement {
    repositories {
        maven { url 'https://repo.spring.io/milestone' }
        gradlePluginPortal()
    }
    plugins {
        id 'org.springframework.boot' version "${springBootVersion}"
        id 'com.google.cloud.tools.jib' version "${jibPluginVersion}"
        id 'com.gorylenko.gradle-git-properties' version "${gitPropertiesPluginVersion}"
        id 'com.github.node-gradle.node' version "${gradleNodePluginVersion}"
        id 'org.liquibase.gradle' version "${liquibasePluginVersion}"
        id 'org.sonarqube' version "${sonarqubePluginVersion}"
        id "io.spring.nohttp" version "${noHttpCheckstyleVersion}"
        id 'com.github.andygoossens.gradle-modernizer-plugin' version "${modernizerPluginVersion}"
        id "com.gradle.enterprise" version "${gradleEnterprisePluginVersion}"
        id "com.gradle.common-custom-user-data-gradle-plugin" version "${gradleCommonCustomUserDataPluginVersion}"
    }
}

plugins {
    id 'com.gradle.enterprise'
    id 'com.gradle.common-custom-user-data-gradle-plugin'
}

gradleEnterprise {
    server = "https://ge.solutions-team.gradle.com"
    buildScan {
        captureTaskInputFiles = true
        uploadInBackground = System.getenv("CI") == null // adjust to your CI provider
        publishAlways()
    }
}

buildCache {
    local { enabled = false }
    remote(HttpBuildCache) {
        enabled = true // Disabled as this might not always desired
        url = 'https://cache-node-solutions.grdev.net/cache/exp4/'
        push = true
        credentials {
            username = System.getenv("GRADLE_ENTERPRISE_CACHE_USERNAME")
            password = System.getenv("GRADLE_ENTERPRISE_CACHE_PASSWORD")
        }
    }
}
rootProject.name = "jhipster-gradle-sample-application"
